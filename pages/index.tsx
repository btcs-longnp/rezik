import { useState, useEffect, FC, useRef } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { MusicalNoteOutline } from 'react-ionicons';
import axios from 'axios';
import YoutubeSearchItem from '../models/youtubeSearchItem';
import PlayList, {
  pushSongRequest,
  newPlayList,
} from '../models/songRequest/PlayList';
import PlayListRepository from '../services/firestore/playListRepository';
import SongRequest, { newSongRequest } from '../models/songRequest/SongRequest';
import YoutubeSong, { newYoutubeSong } from '../models/song/YoutubeSong';
import { newUser } from '../models/user/User';

const repo = new PlayListRepository('isling');
interface VideoProps {
  thumbnailImage: string;
  title: string;
  channel: string;
  addSongRequest: () => void;
}

const Video: FC<VideoProps> = ({ thumbnailImage, title, channel }) => {
  return (
    <div className='flex p-6 font-mono '>
      <div className='flex-none w-48 mb-10 relative z-10 before:absolute before:top-1 before:left-1 before:w-full before:h-full'>
        <img
          src={thumbnailImage}
          alt=''
          className='absolute z-10 inset-0 w-full object-cover rounded-lg'
        />
      </div>
      <form className='flex-auto pl-6'>
        <div className='relative flex flex-wrap items-baseline pb-6 '>
          <h1 className='relative w-full flex-none mb-2 text-xl font-semibold text-white'>
            {title}
          </h1>
          <div className='relative text-sm text-white'>{channel}</div>
        </div>
        <div className='flex space-x-2 mb-4 text-sm font-medium'>
          <div className='flex space-x-4'>
            <button
              className='px-6 h-12 uppercase font-semibold tracking-wider border border-gray-200 text-white hover:bg-[bisque] hover:text-black'
              type='button'
            >
              Add to list
            </button>
          </div>
        </div>
      </form>
    </div>
  );
};

const sampleSongRequest = newSongRequest(
  newYoutubeSong('dQw4w9WgXcQ', 'Never Gonna Give You Up'),
  newUser('isling', 'Isling')
);

const Home: NextPage = () => {
  const [keyword, setKeyword] = useState<string>('');
  const [items, setItems] = useState<YoutubeSearchItem[]>([]);
  const [playlist] = useState<PlayList>(newPlayList([], 0));
  const timeout = useRef<any>(null);
  const handleChange = (value: string) => {
    if (timeout.current != null) {
      clearTimeout(timeout.current);
    }
    timeout.current = setTimeout(function () {
      setKeyword(value);
    }, 500);
  };
  const addSongRequest = (youtubeSong: YoutubeSong) => async () => {
    const songRequest = newSongRequest(
      youtubeSong,
      newUser('isling', 'Isling')
    );
    const newPlayList = pushSongRequest(playlist, songRequest);
    await repo.setPlayList(newPlayList);
  };

  useEffect(() => {
    if (keyword == '') return;
    axios({
      method: 'GET',
      url: 'https://www.googleapis.com/youtube/v3/search',
      params: {
        part: 'snippet',
        maxResults: 8,
        order: 'relevance',
        q: keyword,
        type: 'video',
        key: 'AIzaSyCxMLRCWK7yQW2eH6E9xYZdFl-M4rylTAY',
      },
    }).then((response) => {
      setItems(response.data.items);
    });
  }, [keyword]);

  return (
    <div>
      <Head>
        <title>Rezik - Play Your Album</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='w-screen h-screen bg-gray-800 text-gray-800 py-16'>
        <div className='w-1/3 h-full mx-auto relative rounded-b-md overflow-hidden'>
          <div className='absolute top-0 left-0 h-12 w-full bg-slate-800'>
            <div className='relative h-full'>
              <div className='absolute top-full w-full left-0 h-6 bg-gradient-to-b from-gray-800  to-transparent'></div>
              <div className='absolute top-1/2 left-3 -translate-y-1/2 transform text-gray-500'>
                <MusicalNoteOutline
                  height='22px'
                  width='22px'
                  color='#bec7d5'
                />
              </div>
              <input
                type='text'
                className='rounded-md h-full px-10 w-full focus:outline-none bg-slate-50'
                onChange={(event) => handleChange(event.target.value)}
                autoFocus-
              />
            </div>
          </div>
          <div className='h-full overflow-y-auto absolute top-12'>
            <div className='space-y-4 overflow-y-auto'>
              <div className='h-14'></div>
              {items.length > 0 &&
                items.map((value, index) => {
                  const videoData = value.snippet;
                  return (
                    <Video
                      key={index}
                      title={videoData.title}
                      channel={videoData.channelTitle}
                      thumbnailImage={videoData.thumbnails.default.url}
                      addSongRequest={addSongRequest(
                        newYoutubeSong(value.id.videoId, videoData.title)
                      )}
                    />
                  );
                })}
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
